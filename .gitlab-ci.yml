.docker: &docker
  image: docker:stable
  services:
    - docker:dind

.dev-only: &dev-only
  only:
  - master
  - /^feature.*$/
  - /^bugfix.*$/

before_script:
  - mkdir -p $GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
  - echo "Running in $GOPATH/src/gitlab.com/$CI_PROJECT_PATH"
  - ln -s $CI_PROJECT_DIR/ $GOPATH/src/gitlab.com/$CI_PROJECT_PATH
  - cd $GOPATH/src/gitlab.com/$CI_PROJECT_PATH
  - pwd
  - mkdir -p ~/.kube

.base: &base
  image: scalify/glide:0.13.0

variables:
  CGO_ENABLED: 0

stages:
  - dependencies
  - test
  - build

Get Dependencies:
  <<: *dev-only
  <<: *base
  stage: dependencies
  artifacts:
    paths:
    - vendor/
    expire_in: 1 day
    untracked: true
  script:
    - glide install --strip-vendor

gometalinter:
  <<: *dev-only
  <<: *base
  stage: test
  allow_failure: true
  dependencies:
  - Get Dependencies
  script:
    - go get github.com/alecthomas/gometalinter
    - gometalinter -i
    - gometalinter --deadline=5m --vendor --skip=proto --sort=severity ./...

Test:
  <<: *base
  stage: test
  dependencies:
  - Get Dependencies
  script:
  - go test ./...
  allow_failure: true
  <<: *dev-only

Build Application:
  <<: *base
  stage: test
  dependencies:
  - Get Dependencies
  artifacts:
    paths:
    - $CI_PROJECT_NAME
  script:
  - GOOS=linux go build -v -ldflags '-w -extldflags '-static'' .
  <<: *dev-only

build-docker-image-master:
  <<: *docker
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build-docker-image-tags:
  <<: *docker
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:CI_COMMIT_REF_NAME"
  only:
    - tags
